generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Department {
  id      String  @id @default(cuid())
  code    Int     @unique
  name    String
  section String  @default("N/A")
  users   User[]  @relation("DepartmentUsers")

  @@map("departments")
}

model IncidentType {
  id        String     @id @default(cuid())
  name      String     @unique
  incidents Incident[]

  @@map("incident_types")
}

model User {
  id                  String     @id @default(cuid())
  role                String
  name                String
  password            String
  ticketNo            String     @unique
  essUserId           String?    @unique
  designation         String?
  contactNo           String?
  emailId             String?
  emailIdNic          String?
  sailPNo             String?    @unique
  passwordLastChanged DateTime   @default(now())
  department          Department?  @relation("DepartmentUsers", fields: [departmentId], references: [id])
  departmentId        String?
  incidentsRequested  Incident[] @relation("UserRequestor")
  incidentsAffected   Incident[] @relation("AffectedUserIncidents")

  createdAt           DateTime   @default(now())
  updatedAt           DateTime   @updatedAt

  @@map("users")
}

model AuditEntry {
  id         String   @id @default(cuid())
  timestamp  DateTime @default(now())
  author     String
  action     String
  comment    String
  rating     Int?
  isEdited   Boolean  @default(false)
  editedAt   DateTime?
  incident   Incident @relation(fields: [incidentId], references: [id])
  incidentId String

  @@map("audit_entries")
}

model Incident {
  id               String       @id @default(cuid())
  shiftDate        DateTime
  jobTitle         String
  description      String
  priority         String
  status           String
  location         String?
  ipAddress        String?
  jobFrom          String?
  reportedOn       DateTime     @default(now())
  isTypeLocked     Boolean?
  isPriorityLocked Boolean?
  affectedTicketNo String?
  rating           Int?
  telecomTasks     String[]
  assignedTeam     String       @default("C&IT")
  etlTasks         String[]
  incidentType     IncidentType @relation(fields: [incidentTypeId], references: [id])
  incidentTypeId   String
  requestor        User         @relation("UserRequestor", fields: [requestorId], references: [id])
  requestorId      String
  affectedUser     User?        @relation("AffectedUserIncidents", fields: [affectedUserId], references: [id])
  affectedUserId   String?
  auditTrail       AuditEntry[]

  @@map("incidents")
}